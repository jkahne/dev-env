# Function to generate the list of directories for selection
generate_dir_list() {
  search_dirs=(
    ~/projects
    ~/projects/jkahne
    ~/projects/jkahne/2025
    ~/projects/old
    ~/projects/37signals/
    ~/projects/code-references/
    ~/projects/github/yshmarov
    ~/projects/make-my-own/
    ~/projects/jbranchaud/
    ~/projects/work
  )

  direct_dirs=(
    ~/dev-env/
  )

  find_command="find"
  for dir in "${search_dirs[@]}"; do
    find_command="$find_command $dir"
  done
  find_command="$find_command -mindepth 1 -maxdepth 1 -type d"

  eval "$find_command; printf '%s\n' \"\${direct_dirs[@]}\""
}

# Case 1: Directory is specified
if [[ $# -gt 0 && -d "$1" ]]; then
  selected=$(cd "$1" && pwd)

# Case 2: Argument is specified but not a directory - use as search term
elif [[ $# -gt 0 ]]; then
  search_term="$1"
  selected=$(generate_dir_list | fzf -q "$search_term" --select-1)

  if [[ -z "$selected" ]]; then
    echo "No directory matching '$search_term' found."
    exit 1
  fi

# Case 3: No argument provided - interactive selection
else
  selected=$(generate_dir_list | fzf)

  if [[ -z "$selected" ]]; then
    exit 0
  fi
fi

selected_name=$(basename "$selected" | tr ":,. " "____")

switch_to() {
  if [[ -z "$TMUX" ]]; then
    tmux attach-session -t "$selected_name"
  else
    tmux switch-client -t "$selected_name"
  fi
}

if tmux has-session -t="$selected_name" 2> /dev/null; then
  switch_to
  exit 0
fi

tmux new-session -ds "$selected_name" -c "$selected"
tmux send-keys -t "$selected_name" "ready-tmux" Enter
switch_to
